
---

## ðŸ’» recommender.py (sample code)  
```python
import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

# Load dataset (replace with your own dataset)
movies = pd.read_csv("data/movies.csv")

# Combine features for similarity
movies["combined_features"] = (
    movies["genres"].fillna("") + " " +
    movies["keywords"].fillna("") + " " +
    movies["tagline"].fillna("") + " " +
    movies["cast"].fillna("") + " " +
    movies["director"].fillna("")
)

# Create count matrix and compute similarity
cv = CountVectorizer(stop_words="english")
count_matrix = cv.fit_transform(movies["combined_features"])
cosine_sim = cosine_similarity(count_matrix)

# Function to recommend movies
def recommend_movie(title):
    if title not in movies["title"].values:
        return ["Movie not found. Try another."]
    idx = movies[movies["title"] == title].index[0]
    scores = list(enumerate(cosine_sim[idx]))
    sorted_scores = sorted(scores, key=lambda x: x[1], reverse=True)
    recommended = []
    for i in sorted_scores[1:6]:
        recommended.append(movies.iloc[i[0]]["title"])
    return recommended

# Example run
if __name__ == "__main__":
    movie_name = input("Enter a movie you like: ")
    recs = recommend_movie(movie_name)
    print("Recommended movies:")
    for r in recs:
        print(r)
